

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 22:04:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F46J50 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _PORTC	set	3970
    54   000000                     _TRISD	set	3989
    55   000000                     _TRISE	set	3990
    56   000000                     _PORTD	set	3971
    57   000000                     _PORTB	set	3969
    58   000000                     _PORTE	set	3972
    59   000000                     _TRISB	set	3987
    60   000000                     _TRISC	set	3988
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   00FDA2                     __pcinit:
    66                           	callstack 0
    67   00FDA2                     start_initialization:
    68                           	callstack 0
    69   00FDA2                     __initialization:
    70                           	callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (20 bytes)
    73   00FDA2  EE00  F001         	lfsr	0,__pbssCOMRAM
    74   00FDA6  0E14               	movlw	20
    75   00FDA8                     clear_0:
    76   00FDA8  6AEE               	clrf	postinc0,c
    77   00FDAA  06E8               	decf	wreg,f,c
    78   00FDAC  E1FD               	bnz	clear_0
    79   00FDAE                     end_of_initialization:
    80                           	callstack 0
    81   00FDAE                     __end_of__initialization:
    82                           	callstack 0
    83   00FDAE  0100               	movlb	0
    84   00FDB0  EF7E  F07F         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	bssCOMRAM
    87   000001                     __pbssCOMRAM:
    88                           	callstack 0
    89   000001                     _z:
    90                           	callstack 0
    91   000001                     	ds	4
    92   000005                     _y:
    93                           	callstack 0
    94   000005                     	ds	4
    95   000009                     _x:
    96                           	callstack 0
    97   000009                     	ds	4
    98   00000D                     _posy:
    99                           	callstack 0
   100   00000D                     	ds	4
   101   000011                     _posx:
   102                           	callstack 0
   103   000011                     	ds	4
   104                           
   105                           	psect	cstackCOMRAM
   106   000015                     __pcstackCOMRAM:
   107                           	callstack 0
   108   000015                     servo@pos:
   109                           	callstack 0
   110   000015                     moveright@steps:
   111                           	callstack 0
   112   000015                     moveleft@steps:
   113                           	callstack 0
   114   000015                     movedown@steps:
   115                           	callstack 0
   116   000015                     moveup@steps:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x0
   120   000015                     	ds	2
   121   000017                     ??_servo:
   122   000017                     ??_moveright:
   123   000017                     ??_moveleft:
   124   000017                     ??_movedown:
   125   000017                     ??_moveup:
   126                           
   127                           ; 1 bytes @ 0x2
   128   000017                     	ds	1
   129   000018                     servo@i:
   130                           	callstack 0
   131   000018                     moveright@i:
   132                           	callstack 0
   133   000018                     moveleft@i:
   134                           	callstack 0
   135   000018                     movedown@i:
   136                           	callstack 0
   137   000018                     moveup@i:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x3
   141   000018                     	ds	2
   142   00001A                     
   143                           ; 1 bytes @ 0x5
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 170 in file "newmain.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called: 1
   169 ;; This function calls:
   170 ;;		_movedown
   171 ;;		_moveleft
   172 ;;		_moveright
   173 ;;		_moveup
   174 ;;		_servo
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181   00FEFC                     __ptext0:
   182                           	callstack 0
   183   00FEFC                     _main:
   184                           	callstack 30
   185   00FEFC                     
   186                           ;newmain.c: 175:   TRISC = 0x00;
   187   00FEFC  0E00               	movlw	0
   188   00FEFE  6E94               	movwf	148,c	;volatile
   189                           
   190                           ;newmain.c: 176:   TRISB = 0x00;
   191   00FF00  0E00               	movlw	0
   192   00FF02  6E93               	movwf	147,c	;volatile
   193                           
   194                           ;newmain.c: 177:   TRISE = 0x00;
   195   00FF04  0E00               	movlw	0
   196   00FF06  6E96               	movwf	150,c	;volatile
   197                           
   198                           ;newmain.c: 178:   TRISD = 0x00;
   199   00FF08  0E00               	movlw	0
   200   00FF0A  6E95               	movwf	149,c	;volatile
   201                           
   202                           ;newmain.c: 187:   PORTC = 0x00;
   203   00FF0C  0E00               	movlw	0
   204   00FF0E  6E82               	movwf	130,c	;volatile
   205                           
   206                           ;newmain.c: 188:   PORTE = 0x00;
   207   00FF10  0E00               	movlw	0
   208   00FF12  6E84               	movwf	132,c	;volatile
   209                           
   210                           ;newmain.c: 189:   PORTB = 0x02;
   211   00FF14  0E02               	movlw	2
   212   00FF16  6E81               	movwf	129,c	;volatile
   213                           
   214                           ;newmain.c: 196:   PORTD = 0x00;
   215   00FF18  0E00               	movlw	0
   216   00FF1A  6E83               	movwf	131,c	;volatile
   217   00FF1C                     
   218                           ;newmain.c: 255:   moveright(1700);
   219   00FF1C  0E06               	movlw	6
   220   00FF1E  6E16               	movwf	(moveright@steps+1)^0,c
   221   00FF20  0EA4               	movlw	164
   222   00FF22  6E15               	movwf	moveright@steps^0,c
   223   00FF24  EC2C  F07F         	call	_moveright	;wreg free
   224   00FF28                     
   225                           ;newmain.c: 256:   moveleft(1695);
   226   00FF28  0E06               	movlw	6
   227   00FF2A  6E16               	movwf	(moveleft@steps+1)^0,c
   228   00FF2C  0E9F               	movlw	159
   229   00FF2E  6E15               	movwf	moveleft@steps^0,c
   230   00FF30  EC03  F07F         	call	_moveleft	;wreg free
   231   00FF34                     
   232                           ;newmain.c: 257:   movedown(1300);
   233   00FF34  0E05               	movlw	5
   234   00FF36  6E16               	movwf	(movedown@steps+1)^0,c
   235   00FF38  0E14               	movlw	20
   236   00FF3A  6E15               	movwf	movedown@steps^0,c
   237   00FF3C  ECDA  F07E         	call	_movedown	;wreg free
   238   00FF40                     
   239                           ;newmain.c: 258:   moveup(1300);
   240   00FF40  0E05               	movlw	5
   241   00FF42  6E16               	movwf	(moveup@steps+1)^0,c
   242   00FF44  0E14               	movlw	20
   243   00FF46  6E15               	movwf	moveup@steps^0,c
   244   00FF48  EC55  F07F         	call	_moveup	;wreg free
   245   00FF4C                     
   246                           ;newmain.c: 259:   servo(10);
   247   00FF4C  0E00               	movlw	0
   248   00FF4E  6E16               	movwf	(servo@pos+1)^0,c
   249   00FF50  0E0A               	movlw	10
   250   00FF52  6E15               	movwf	servo@pos^0,c
   251   00FF54  ECB6  F07F         	call	_servo	;wreg free
   252   00FF58                     
   253                           ;newmain.c: 260:   servo(100);
   254   00FF58  0E00               	movlw	0
   255   00FF5A  6E16               	movwf	(servo@pos+1)^0,c
   256   00FF5C  0E64               	movlw	100
   257   00FF5E  6E15               	movwf	servo@pos^0,c
   258   00FF60  ECB6  F07F         	call	_servo	;wreg free
   259   00FF64                     l104:
   260   00FF64  EFB2  F07F         	goto	l104
   261   00FF68  EF00  F000         	goto	start
   262   00FF6C                     __end_of_main:
   263                           	callstack 0
   264                           
   265 ;; *************** function _servo *****************
   266 ;; Defined at:
   267 ;;		line 23 in file "newmain.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  pos             2    0[COMRAM] int 
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  i               2    3[COMRAM] int 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2, status,0
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   284 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   285 ;;Total ram usage:        5 bytes
   286 ;; Hardware stack levels used: 1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;;		_position
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text1
   296   00FF6C                     __ptext1:
   297                           	callstack 0
   298   00FF6C                     _servo:
   299                           	callstack 30
   300   00FF6C                     
   301                           ;newmain.c: 25:     for(int i = 0; i < 25; i++){
   302   00FF6C  0E00               	movlw	0
   303   00FF6E  6E19               	movwf	(servo@i+1)^0,c
   304   00FF70  0E00               	movlw	0
   305   00FF72  6E18               	movwf	servo@i^0,c
   306   00FF74                     l955:
   307                           
   308                           ;newmain.c: 26:         if(pos == 100){
   309   00FF74  0E64               	movlw	100
   310   00FF76  1815               	xorwf	servo@pos^0,w,c
   311   00FF78  1016               	iorwf	(servo@pos+1)^0,w,c
   312   00FF7A  A4D8               	btfss	status,2,c
   313   00FF7C  EFC2  F07F         	goto	u251
   314   00FF80  EFC4  F07F         	goto	u250
   315   00FF84                     u251:
   316   00FF84  EFD4  F07F         	goto	l963
   317   00FF88                     u250:
   318   00FF88                     
   319                           ;newmain.c: 27:             PORTB |= 0x02;
   320   00FF88  8281               	bsf	129,1,c	;volatile
   321   00FF8A                     
   322                           ;newmain.c: 28:             _delay((unsigned long)((1.5)*(4000000/4000.0)));
   323   00FF8A  0ED6               	movlw	214
   324   00FF8C                     u497:
   325   00FF8C  D000               	nop2	
   326   00FF8E  D000               	nop2	
   327   00FF90  2EE8               	decfsz	wreg,f,c
   328   00FF92  D7FC               	bra	u497
   329   00FF94  D000               	nop2	
   330   00FF96                     
   331                           ;newmain.c: 29:             PORTB &= ~0x02;
   332   00FF96  9281               	bcf	129,1,c	;volatile
   333                           
   334                           ;newmain.c: 30:             _delay((unsigned long)((18.5)*(4000000/4000.0)));
   335   00FF98  0E19               	movlw	25
   336   00FF9A  6E17               	movwf	??_servo^0,c
   337   00FF9C  0E05               	movlw	5
   338   00FF9E                     u507:
   339   00FF9E  2EE8               	decfsz	wreg,f,c
   340   00FFA0  D7FE               	bra	u507
   341   00FFA2  2E17               	decfsz	??_servo^0,f,c
   342   00FFA4  D7FC               	bra	u507
   343   00FFA6  F000               	nop	
   344   00FFA8                     l963:
   345                           
   346                           ;newmain.c: 32:         if(pos == 10){
   347   00FFA8  0E0A               	movlw	10
   348   00FFAA  1815               	xorwf	servo@pos^0,w,c
   349   00FFAC  1016               	iorwf	(servo@pos+1)^0,w,c
   350   00FFAE  A4D8               	btfss	status,2,c
   351   00FFB0  EFDC  F07F         	goto	u261
   352   00FFB4  EFDE  F07F         	goto	u260
   353   00FFB8                     u261:
   354   00FFB8  EFEB  F07F         	goto	l971
   355   00FFBC                     u260:
   356   00FFBC                     
   357                           ;newmain.c: 33:             PORTB |= 0x02;
   358   00FFBC  8281               	bsf	129,1,c	;volatile
   359   00FFBE                     
   360                           ;newmain.c: 34:             _delay((unsigned long)((0.75)*(4000000/4000.0)));
   361   00FFBE  0EFA               	movlw	250
   362   00FFC0                     u517:
   363   00FFC0  2EE8               	decfsz	wreg,f,c
   364   00FFC2  D7FE               	bra	u517
   365   00FFC4                     
   366                           ;newmain.c: 35:             PORTB &= ~0x02;
   367   00FFC4  9281               	bcf	129,1,c	;volatile
   368                           
   369                           ;newmain.c: 36:             _delay((unsigned long)((19.25)*(4000000/4000.0)));
   370   00FFC6  0E19               	movlw	25
   371   00FFC8  6E17               	movwf	??_servo^0,c
   372   00FFCA  0EFF               	movlw	255
   373   00FFCC                     u527:
   374   00FFCC  2EE8               	decfsz	wreg,f,c
   375   00FFCE  D7FE               	bra	u527
   376   00FFD0  2E17               	decfsz	??_servo^0,f,c
   377   00FFD2  D7FC               	bra	u527
   378   00FFD4  F000               	nop	
   379   00FFD6                     l971:
   380                           
   381                           ;newmain.c: 38:     }
   382   00FFD6  4A18               	infsnz	servo@i^0,f,c
   383   00FFD8  2A19               	incf	(servo@i+1)^0,f,c
   384   00FFDA  BE19               	btfsc	(servo@i+1)^0,7,c
   385   00FFDC  EFF9  F07F         	goto	u271
   386   00FFE0  5019               	movf	(servo@i+1)^0,w,c
   387   00FFE2  E109               	bnz	u270
   388   00FFE4  0E19               	movlw	25
   389   00FFE6  5C18               	subwf	servo@i^0,w,c
   390   00FFE8  A0D8               	btfss	status,0,c
   391   00FFEA  EFF9  F07F         	goto	u271
   392   00FFEE  EFFB  F07F         	goto	u270
   393   00FFF2                     u271:
   394   00FFF2  EFBA  F07F         	goto	l955
   395   00FFF6                     u270:
   396   00FFF6  0012               	return		;funcret
   397   00FFF8                     __end_of_servo:
   398                           	callstack 0
   399                           
   400 ;; *************** function _moveup *****************
   401 ;; Defined at:
   402 ;;		line 77 in file "newmain.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  steps           2    0[COMRAM] int 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  i               2    3[COMRAM] int 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   420 ;;Total ram usage:        5 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text2
   430   00FEAA                     __ptext2:
   431                           	callstack 0
   432   00FEAA                     _moveup:
   433                           	callstack 30
   434   00FEAA                     
   435                           ;newmain.c: 78:     PORTD = 0x80;
   436   00FEAA  0E80               	movlw	128
   437   00FEAC  6E83               	movwf	131,c	;volatile
   438                           
   439                           ;newmain.c: 79:     for(int i = 0; i < steps; i++){
   440   00FEAE  0E00               	movlw	0
   441   00FEB0  6E19               	movwf	(moveup@i+1)^0,c
   442   00FEB2  0E00               	movlw	0
   443   00FEB4  6E18               	movwf	moveup@i^0,c
   444   00FEB6  EF6E  F07F         	goto	l50
   445   00FEBA                     l1005:
   446                           
   447                           ;newmain.c: 80:         PORTD |= 0x50;
   448   00FEBA  0E50               	movlw	80
   449   00FEBC  1283               	iorwf	131,f,c	;volatile
   450   00FEBE                     
   451                           ;newmain.c: 81:         _delay((unsigned long)((2)*(4000000/4000.0)));
   452   00FEBE  0E03               	movlw	3
   453   00FEC0  6E17               	movwf	??_moveup^0,c
   454   00FEC2  0E98               	movlw	152
   455   00FEC4                     u537:
   456   00FEC4  2EE8               	decfsz	wreg,f,c
   457   00FEC6  D7FE               	bra	u537
   458   00FEC8  2E17               	decfsz	??_moveup^0,f,c
   459   00FECA  D7FC               	bra	u537
   460   00FECC                     
   461                           ;newmain.c: 82:         PORTD &= ~0x50;
   462   00FECC  0EAF               	movlw	175
   463   00FECE  1683               	andwf	131,f,c	;volatile
   464                           
   465                           ;newmain.c: 83:         _delay((unsigned long)((1)*(4000000/4000.0)));
   466   00FED0  0EC8               	movlw	200
   467   00FED2                     u547:
   468   00FED2  D000               	nop2	
   469   00FED4  2EE8               	decfsz	wreg,f,c
   470   00FED6  D7FD               	bra	u547
   471   00FED8                     
   472                           ;newmain.c: 84:     }
   473   00FED8  4A18               	infsnz	moveup@i^0,f,c
   474   00FEDA  2A19               	incf	(moveup@i+1)^0,f,c
   475   00FEDC                     l50:
   476   00FEDC  5015               	movf	moveup@steps^0,w,c
   477   00FEDE  5C18               	subwf	moveup@i^0,w,c
   478   00FEE0  5019               	movf	(moveup@i+1)^0,w,c
   479   00FEE2  0A80               	xorlw	128
   480   00FEE4  6E17               	movwf	??_moveup^0,c
   481   00FEE6  5016               	movf	(moveup@steps+1)^0,w,c
   482   00FEE8  0A80               	xorlw	128
   483   00FEEA  5817               	subwfb	??_moveup^0,w,c
   484   00FEEC  A0D8               	btfss	status,0,c
   485   00FEEE  EF7B  F07F         	goto	u311
   486   00FEF2  EF7D  F07F         	goto	u310
   487   00FEF6                     u311:
   488   00FEF6  EF5D  F07F         	goto	l1005
   489   00FEFA                     u310:
   490   00FEFA  0012               	return		;funcret
   491   00FEFC                     __end_of_moveup:
   492                           	callstack 0
   493                           
   494 ;; *************** function _moveright *****************
   495 ;; Defined at:
   496 ;;		line 42 in file "newmain.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  steps           2    0[COMRAM] int 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  i               2    3[COMRAM] int 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   513 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   514 ;;Total ram usage:        5 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text3
   524   00FE58                     __ptext3:
   525                           	callstack 0
   526   00FE58                     _moveright:
   527                           	callstack 30
   528   00FE58                     
   529                           ;newmain.c: 45:     PORTD = 0x00;
   530   00FE58  0E00               	movlw	0
   531   00FE5A  6E83               	movwf	131,c	;volatile
   532                           
   533                           ;newmain.c: 46:     for(int i = 0; i < steps; i++){
   534   00FE5C  0E00               	movlw	0
   535   00FE5E  6E19               	movwf	(moveright@i+1)^0,c
   536   00FE60  0E00               	movlw	0
   537   00FE62  6E18               	movwf	moveright@i^0,c
   538   00FE64  EF45  F07F         	goto	l32
   539   00FE68                     l975:
   540                           
   541                           ;newmain.c: 47:         PORTD |= 0x50;
   542   00FE68  0E50               	movlw	80
   543   00FE6A  1283               	iorwf	131,f,c	;volatile
   544   00FE6C                     
   545                           ;newmain.c: 48:         _delay((unsigned long)((2)*(4000000/4000.0)));
   546   00FE6C  0E03               	movlw	3
   547   00FE6E  6E17               	movwf	??_moveright^0,c
   548   00FE70  0E98               	movlw	152
   549   00FE72                     u557:
   550   00FE72  2EE8               	decfsz	wreg,f,c
   551   00FE74  D7FE               	bra	u557
   552   00FE76  2E17               	decfsz	??_moveright^0,f,c
   553   00FE78  D7FC               	bra	u557
   554   00FE7A                     
   555                           ;newmain.c: 49:         PORTD &= ~0x50;
   556   00FE7A  0EAF               	movlw	175
   557   00FE7C  1683               	andwf	131,f,c	;volatile
   558                           
   559                           ;newmain.c: 50:         _delay((unsigned long)((1)*(4000000/4000.0)));
   560   00FE7E  0EC8               	movlw	200
   561   00FE80                     u567:
   562   00FE80  D000               	nop2	
   563   00FE82  2EE8               	decfsz	wreg,f,c
   564   00FE84  D7FD               	bra	u567
   565   00FE86                     
   566                           ;newmain.c: 51:     }
   567   00FE86  4A18               	infsnz	moveright@i^0,f,c
   568   00FE88  2A19               	incf	(moveright@i+1)^0,f,c
   569   00FE8A                     l32:
   570   00FE8A  5015               	movf	moveright@steps^0,w,c
   571   00FE8C  5C18               	subwf	moveright@i^0,w,c
   572   00FE8E  5019               	movf	(moveright@i+1)^0,w,c
   573   00FE90  0A80               	xorlw	128
   574   00FE92  6E17               	movwf	??_moveright^0,c
   575   00FE94  5016               	movf	(moveright@steps+1)^0,w,c
   576   00FE96  0A80               	xorlw	128
   577   00FE98  5817               	subwfb	??_moveright^0,w,c
   578   00FE9A  A0D8               	btfss	status,0,c
   579   00FE9C  EF52  F07F         	goto	u281
   580   00FEA0  EF54  F07F         	goto	u280
   581   00FEA4                     u281:
   582   00FEA4  EF34  F07F         	goto	l975
   583   00FEA8                     u280:
   584   00FEA8  0012               	return		;funcret
   585   00FEAA                     __end_of_moveright:
   586                           	callstack 0
   587                           
   588 ;; *************** function _moveleft *****************
   589 ;; Defined at:
   590 ;;		line 55 in file "newmain.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  steps           2    0[COMRAM] int 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  i               2    3[COMRAM] int 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   607 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   608 ;;Total ram usage:        5 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text4
   618   00FE06                     __ptext4:
   619                           	callstack 0
   620   00FE06                     _moveleft:
   621                           	callstack 30
   622   00FE06                     
   623                           ;newmain.c: 56:     PORTD = 0xA0;
   624   00FE06  0EA0               	movlw	160
   625   00FE08  6E83               	movwf	131,c	;volatile
   626                           
   627                           ;newmain.c: 57:     for(int i = 0; i < steps; i++){
   628   00FE0A  0E00               	movlw	0
   629   00FE0C  6E19               	movwf	(moveleft@i+1)^0,c
   630   00FE0E  0E00               	movlw	0
   631   00FE10  6E18               	movwf	moveleft@i^0,c
   632   00FE12  EF1C  F07F         	goto	l38
   633   00FE16                     l985:
   634                           
   635                           ;newmain.c: 58:         PORTD |= 0x50;
   636   00FE16  0E50               	movlw	80
   637   00FE18  1283               	iorwf	131,f,c	;volatile
   638   00FE1A                     
   639                           ;newmain.c: 59:         _delay((unsigned long)((2)*(4000000/4000.0)));
   640   00FE1A  0E03               	movlw	3
   641   00FE1C  6E17               	movwf	??_moveleft^0,c
   642   00FE1E  0E98               	movlw	152
   643   00FE20                     u577:
   644   00FE20  2EE8               	decfsz	wreg,f,c
   645   00FE22  D7FE               	bra	u577
   646   00FE24  2E17               	decfsz	??_moveleft^0,f,c
   647   00FE26  D7FC               	bra	u577
   648   00FE28                     
   649                           ;newmain.c: 60:         PORTD &= ~0x50;
   650   00FE28  0EAF               	movlw	175
   651   00FE2A  1683               	andwf	131,f,c	;volatile
   652                           
   653                           ;newmain.c: 61:         _delay((unsigned long)((1)*(4000000/4000.0)));
   654   00FE2C  0EC8               	movlw	200
   655   00FE2E                     u587:
   656   00FE2E  D000               	nop2	
   657   00FE30  2EE8               	decfsz	wreg,f,c
   658   00FE32  D7FD               	bra	u587
   659   00FE34                     
   660                           ;newmain.c: 62:     }
   661   00FE34  4A18               	infsnz	moveleft@i^0,f,c
   662   00FE36  2A19               	incf	(moveleft@i+1)^0,f,c
   663   00FE38                     l38:
   664   00FE38  5015               	movf	moveleft@steps^0,w,c
   665   00FE3A  5C18               	subwf	moveleft@i^0,w,c
   666   00FE3C  5019               	movf	(moveleft@i+1)^0,w,c
   667   00FE3E  0A80               	xorlw	128
   668   00FE40  6E17               	movwf	??_moveleft^0,c
   669   00FE42  5016               	movf	(moveleft@steps+1)^0,w,c
   670   00FE44  0A80               	xorlw	128
   671   00FE46  5817               	subwfb	??_moveleft^0,w,c
   672   00FE48  A0D8               	btfss	status,0,c
   673   00FE4A  EF29  F07F         	goto	u291
   674   00FE4E  EF2B  F07F         	goto	u290
   675   00FE52                     u291:
   676   00FE52  EF0B  F07F         	goto	l985
   677   00FE56                     u290:
   678   00FE56  0012               	return		;funcret
   679   00FE58                     __end_of_moveleft:
   680                           	callstack 0
   681                           
   682 ;; *************** function _movedown *****************
   683 ;; Defined at:
   684 ;;		line 66 in file "newmain.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  steps           2    0[COMRAM] int 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  i               2    3[COMRAM] int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   701 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   702 ;;Total ram usage:        5 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text5
   712   00FDB4                     __ptext5:
   713                           	callstack 0
   714   00FDB4                     _movedown:
   715                           	callstack 30
   716   00FDB4                     
   717                           ;newmain.c: 67:     PORTD = 0x20;
   718   00FDB4  0E20               	movlw	32
   719   00FDB6  6E83               	movwf	131,c	;volatile
   720                           
   721                           ;newmain.c: 68:     for(int i = 0; i < steps; i++){
   722   00FDB8  0E00               	movlw	0
   723   00FDBA  6E19               	movwf	(movedown@i+1)^0,c
   724   00FDBC  0E00               	movlw	0
   725   00FDBE  6E18               	movwf	movedown@i^0,c
   726   00FDC0  EFF3  F07E         	goto	l44
   727   00FDC4                     l995:
   728                           
   729                           ;newmain.c: 69:         PORTD |= 0x50;
   730   00FDC4  0E50               	movlw	80
   731   00FDC6  1283               	iorwf	131,f,c	;volatile
   732   00FDC8                     
   733                           ;newmain.c: 70:         _delay((unsigned long)((2)*(4000000/4000.0)));
   734   00FDC8  0E03               	movlw	3
   735   00FDCA  6E17               	movwf	??_movedown^0,c
   736   00FDCC  0E98               	movlw	152
   737   00FDCE                     u597:
   738   00FDCE  2EE8               	decfsz	wreg,f,c
   739   00FDD0  D7FE               	bra	u597
   740   00FDD2  2E17               	decfsz	??_movedown^0,f,c
   741   00FDD4  D7FC               	bra	u597
   742   00FDD6                     
   743                           ;newmain.c: 71:         PORTD &= ~0x50;
   744   00FDD6  0EAF               	movlw	175
   745   00FDD8  1683               	andwf	131,f,c	;volatile
   746                           
   747                           ;newmain.c: 72:         _delay((unsigned long)((1)*(4000000/4000.0)));
   748   00FDDA  0EC8               	movlw	200
   749   00FDDC                     u607:
   750   00FDDC  D000               	nop2	
   751   00FDDE  2EE8               	decfsz	wreg,f,c
   752   00FDE0  D7FD               	bra	u607
   753   00FDE2                     
   754                           ;newmain.c: 73:     }
   755   00FDE2  4A18               	infsnz	movedown@i^0,f,c
   756   00FDE4  2A19               	incf	(movedown@i+1)^0,f,c
   757   00FDE6                     l44:
   758   00FDE6  5015               	movf	movedown@steps^0,w,c
   759   00FDE8  5C18               	subwf	movedown@i^0,w,c
   760   00FDEA  5019               	movf	(movedown@i+1)^0,w,c
   761   00FDEC  0A80               	xorlw	128
   762   00FDEE  6E17               	movwf	??_movedown^0,c
   763   00FDF0  5016               	movf	(movedown@steps+1)^0,w,c
   764   00FDF2  0A80               	xorlw	128
   765   00FDF4  5817               	subwfb	??_movedown^0,w,c
   766   00FDF6  A0D8               	btfss	status,0,c
   767   00FDF8  EF00  F07F         	goto	u301
   768   00FDFC  EF02  F07F         	goto	u300
   769   00FE00                     u301:
   770   00FE00  EFE2  F07E         	goto	l995
   771   00FE04                     u300:
   772   00FE04  0012               	return		;funcret
   773   00FE06                     __end_of_movedown:
   774                           	callstack 0
   775   000000                     
   776                           	psect	rparam
   777   000000                     
   778                           	psect	config
   779                           
   780                           ;Config register CONFIG1L @ 0xFFF8
   781                           ;	Watchdog Timer
   782                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
   783                           ;	PLL Prescaler Selection bits
   784                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   785                           ;	Stack Overflow/Underflow Reset
   786                           ;	STVREN = OFF, Disabled
   787                           ;	Extended Instruction Set
   788                           ;	XINST = OFF, Disabled
   789                           ;	Background Debug
   790                           ;	DEBUG = 0x1, unprogrammed default
   791   00FFF8                     	org	65528
   792   00FFF8  8C                 	db	140
   793                           
   794                           ;Config register CONFIG1H @ 0xFFF9
   795                           ;	CPU System Clock Postscaler
   796                           ;	CPUDIV = OSC4_PLL6, CPU system clock divide by 6
   797                           ;	Code Protect
   798                           ;	CP0 = ON, Program memory is code-protected
   799   00FFF9                     	org	65529
   800   00FFF9  F0                 	db	240
   801                           
   802                           ;Config register CONFIG2L @ 0xFFFA
   803                           ;	Oscillator
   804                           ;	OSC = INTOSC, INTOSC
   805                           ;	T1OSCEN Enforcement
   806                           ;	T1DIG = OFF, Secondary Oscillator clock source may not be selected
   807                           ;	Low-Power Timer1 Oscillator
   808                           ;	LPT1OSC = OFF, High-power operation
   809                           ;	Fail-Safe Clock Monitor
   810                           ;	FCMEN = OFF, Disabled
   811                           ;	Internal External Oscillator Switch Over Mode
   812                           ;	IESO = OFF, Disabled
   813   00FFFA                     	org	65530
   814   00FFFA  10                 	db	16
   815                           
   816                           ;Config register CONFIG2H @ 0xFFFB
   817                           ;	Watchdog Postscaler
   818                           ;	WDTPS = 1, 1:1
   819   00FFFB                     	org	65531
   820   00FFFB  F0                 	db	240
   821                           
   822                           ;Config register CONFIG3L @ 0xFFFC
   823                           ;	DSWDT Clock Select
   824                           ;	DSWDTOSC = T1OSCREF, DSWDT uses T1OSC/T1CKI
   825                           ;	RTCC Clock Select
   826                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
   827                           ;	Deep Sleep BOR
   828                           ;	DSBOREN = OFF, Disabled
   829                           ;	Deep Sleep Watchdog Timer
   830                           ;	DSWDTEN = OFF, Disabled
   831                           ;	Deep Sleep Watchdog Postscaler
   832                           ;	DSWDTPS = 2, 1:2 (2.1 ms)
   833   00FFFC                     	org	65532
   834   00FFFC  00                 	db	0
   835                           
   836                           ;Config register CONFIG3H @ 0xFFFD
   837                           ;	IOLOCK One-Way Set Enable bit
   838                           ;	IOL1WAY = OFF, The IOLOCK bit (PPSCON<0>) can be set and cleared as needed
   839                           ;	MSSP address masking
   840                           ;	MSSP7B_EN = MSK5, 5 Bit address masking mode
   841   00FFFD                     	org	65533
   842   00FFFD  F0                 	db	240
   843                           
   844                           ;Config register CONFIG4L @ 0xFFFE
   845                           ;	Write/Erase Protect Page Start/End Location
   846                           ;	WPFP = PAGE_0, Write Protect Program Flash Page 0
   847                           ;	Write/Erase Protect Region Select (valid when WPDIS = 0)
   848                           ;	WPEND = PAGE_0, Page 0 through WPFP<5:0> erase/write protected
   849                           ;	Write/Erase Protect Configuration Region
   850                           ;	WPCFG = ON, Configuration Words page erase/write-protected
   851   00FFFE                     	org	65534
   852   00FFFE  00                 	db	0
   853                           
   854                           ;Config register CONFIG4H @ 0xFFFF
   855                           ;	Write Protect Disable bit
   856                           ;	WPDIS = ON, WPFP<5:0>/WPEND region erase/write protected
   857   00FFFF                     	org	65535
   858   00FFFF  F0                 	db	240
   859                           tosu	equ	0xFFF
   860                           tosh	equ	0xFFE
   861                           tosl	equ	0xFFD
   862                           stkptr	equ	0xFFC
   863                           pclatu	equ	0xFFB
   864                           pclath	equ	0xFFA
   865                           pcl	equ	0xFF9
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           prodh	equ	0xFF4
   871                           prodl	equ	0xFF3
   872                           indf0	equ	0xFEF
   873                           postinc0	equ	0xFEE
   874                           postdec0	equ	0xFED
   875                           preinc0	equ	0xFEC
   876                           plusw0	equ	0xFEB
   877                           fsr0h	equ	0xFEA
   878                           fsr0l	equ	0xFE9
   879                           wreg	equ	0xFE8
   880                           indf1	equ	0xFE7
   881                           postinc1	equ	0xFE6
   882                           postdec1	equ	0xFE5
   883                           preinc1	equ	0xFE4
   884                           plusw1	equ	0xFE3
   885                           fsr1h	equ	0xFE2
   886                           fsr1l	equ	0xFE1
   887                           bsr	equ	0xFE0
   888                           indf2	equ	0xFDF
   889                           postinc2	equ	0xFDE
   890                           postdec2	equ	0xFDD
   891                           preinc2	equ	0xFDC
   892                           plusw2	equ	0xFDB
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_movedown
    _main->_moveleft
    _main->_moveright
    _main->_moveup
    _main->_servo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     882
                           _movedown
                           _moveleft
                          _moveright
                             _moveup
                              _servo
 ---------------------------------------------------------------------------------
 (1) _servo                                                5     3      2     394
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveup                                               5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveright                                            5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveleft                                             5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _movedown                                             5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _movedown
   _moveleft
   _moveright
   _moveup
   _servo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      38        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRl          C1      0       0      36        0.0%
BITBANK14           C0      0       0      32        0.0%
BANK14              C0      0       0      33        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhhhh       69      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5      19       1       26.3%
BITBIGSFRhhl         E      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      37        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 22:04:15 2023

                      _x 0009                        _y 0005                        _z 0001  
                     l32 FE8A                       l41 FE56                       l50 FEDC  
                     l35 FEA8                       l44 FDE6                       l53 FEFA  
                     l29 FFF6                       l38 FE38                       l47 FE04  
                    l104 FF64                      l105 FF64                      l961 FF96  
                    l971 FFD6                      l963 FFA8                      l955 FF74  
                    l981 FE86                      l973 FE58                      l965 FFBC  
                    l957 FF88                      l949 FF6C                      l991 FE34  
                    l983 FE06                      l975 FE68                      l967 FFBE  
                    l959 FF8A                      l993 FDB4                      l985 FE16  
                    l977 FE6C                      l969 FFC4                      l995 FDC4  
                    l987 FE1A                      l979 FE7A                      l997 FDC8  
                    l989 FE28                      l999 FDD6                      u300 FE04  
                    u301 FE00                      u310 FEFA                      u311 FEF6  
                    u250 FF88                      u251 FF84                      u260 FFBC  
                    u261 FFB8                      u270 FFF6                      u271 FFF2  
                    u280 FEA8                      u281 FEA4                      u290 FE56  
                    u291 FE52                      u507 FF9E                      u517 FFC0  
                    u607 FDDC                      u527 FFCC                      u537 FEC4  
                    u547 FED2                      u557 FE72                      u567 FE80  
                    u577 FE20                      u497 FF8C                      u587 FE2E  
                    u597 FDCE                      wreg 000FE8                     l1001 FDE2  
                   l1011 FED8                     l1003 FEAA                     l1005 FEBA  
                   l1101 FF4C                     l1007 FEBE                     l1103 FF58  
                   l1009 FECC                     l1091 FEFC                     l1093 FF1C  
                   l1095 FF28                     l1097 FF34                     l1099 FF40  
                   _main FEFC                     _posx 0011                     _posy 000D  
                   start 0000             ___param_bank 000000                    ?_main 0015  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _servo FF6C  
                  status 000FD8          __initialization FDA2             __end_of_main FF6C  
                 ??_main 001A            __activetblptr 000000                   ?_servo 0015  
                 clear_0 FDA8                   isa$std 000001                   _moveup FEAA  
       __end_of_moveleft FE58         __end_of_movedown FE06                   servo@i 0018  
             __accesstop 0060  __end_of__initialization FDAE            ___rparam_used 000001  
         __pcstackCOMRAM 0015            __end_of_servo FFF8                  ??_servo 0017  
                ?_moveup 0015                  __Hparam 0000                  __Lparam 0000  
              ?_moveleft 0015                ?_movedown 0015                  __pcinit FDA2  
                __ramtop 1000                  __ptext0 FEFC                  __ptext1 FF6C  
                __ptext2 FEAA                  __ptext3 FE58                  __ptext4 FE06  
                __ptext5 FDB4     end_of_initialization FDAE              moveup@steps 0015  
      __end_of_moveright FEAA                  moveup@i 0018               ??_moveleft 0017  
             ??_movedown 0017                  postinc0 000FEE           __end_of_moveup FEFC  
    start_initialization FDA2                 ??_moveup 0017              __pbssCOMRAM 0001  
         moveright@steps 0015               moveright@i 0018                _moveright FE58  
          moveleft@steps 0015            movedown@steps 0015                 __Hrparam 0000  
               __Lrparam 0000               ?_moveright 0015                moveleft@i 0018  
              movedown@i 0018                 _moveleft FE06                 _movedown FDB4  
               isa$xinst 000000              ??_moveright 0017                 servo@pos 0015  
